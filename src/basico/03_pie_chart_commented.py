#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Gr√°fico de Pizza - Distribui√ß√£o de Labs por Categoria (VERS√ÉO DID√ÅTICA)

Visualiza a propor√ß√£o de labs em diferentes categorias de conte√∫do.
Esta vers√£o cont√©m coment√°rios linha a linha para aprendizado.

Autor: Alexandre Lavorenti Cancilieri
Data: 2025-10-12
"""

# ============================================================================
# IMPORTA√á√ïES
# ============================================================================

import plotly.graph_objects as go  # Biblioteca para gr√°ficos interativos

# ============================================================================
# DADOS DO GR√ÅFICO
# ============================================================================

# Lista com nomes das categorias de labs
# Agrupa labs por tema/assunto principal
categorias = [
    'QoS',                  # Quality of Service - maior grupo
    'VRF-Lite',             # Virtual Routing and Forwarding
    'Python/Automa√ß√£o',     # Scripts de automa√ß√£o
    'Multicast',            # Multicast routing
    'Virtualiza√ß√£o',        # VMs, Hypervisors, etc
    'Outros'                # Diversos t√≥picos menores
]

# Quantidade de labs em cada categoria
# Esses valores determinam o tamanho de cada fatia
quantidade = [24, 4, 21, 4, 18, 8]

# Total: 79 labs
# Plotly calcula automaticamente os percentuais

# ============================================================================
# PALETA DE CORES
# ============================================================================

# Cores espec√≠ficas para cada categoria
# Mesma paleta dos gr√°ficos anteriores (consist√™ncia visual)
cores = [
    '#667eea',  # QoS - Roxo/Azul
    '#764ba2',  # VRF-Lite - Roxo escuro
    '#f093fb',  # Python/Automa√ß√£o - Rosa claro
    '#4facfe',  # Multicast - Azul claro
    '#43e97b',  # Virtualiza√ß√£o - Verde
    '#fa709a'   # Outros - Rosa
]

# ============================================================================
# CRIAR FIGURA (GR√ÅFICO)
# ============================================================================

# Figure() cria um objeto de gr√°fico vazio
fig = go.Figure()

# ============================================================================
# ADICIONAR PIZZA NO GR√ÅFICO
# ============================================================================

# add_trace() adiciona um elemento visual ao gr√°fico
# Pie() cria gr√°fico de pizza/donut
fig.add_trace(go.Pie(
    labels=categorias,                   # Nomes das fatias
    values=quantidade,                   # Valores (tamanho das fatias)
    marker=dict(
        colors=cores,                    # Lista de cores (uma para cada fatia)
        line=dict(
            color='white',               # Cor da borda entre fatias
            width=2                      # Espessura da borda em pixels
        )
    ),
    hole=0.4,                            # Tamanho do buraco central
                                         # 0 = pizza cheia
                                         # 0.4 = donut (40% de buraco)
                                         # 0.7 = anel fino
    textposition='auto',                 # Posi√ß√£o autom√°tica do texto
                                         # Plotly escolhe melhor posi√ß√£o
    textinfo='label+percent',            # O que mostrar em cada fatia
                                         # 'label' = nome da categoria
                                         # 'percent' = percentual
                                         # 'value' = n√∫mero absoluto
                                         # Pode combinar: 'label+percent+value'
    hovertemplate=(                      # Template customizado do tooltip
        '<b>%{label}</b><br>' +          # Nome da categoria em negrito
        'Labs: %{value}<br>' +           # Quantidade absoluta
        'Percentual: %{percent}<br>' +   # Percentual calculado
        '<extra></extra>'                # Remove trace name
    )
))

# ============================================================================
# CONFIGURAR APAR√äNCIA DO GR√ÅFICO
# ============================================================================

# update_layout() personaliza t√≠tulos, legenda, tamanho, etc
fig.update_layout(
    title='Distribui√ß√£o de Labs por Categoria',  # T√≠tulo principal
    template='plotly_white',                      # Tema visual (fundo branco)
    height=500,                                   # Altura do gr√°fico em pixels
    showlegend=True,                              # Mostrar legenda (importante!)
    legend=dict(
        orientation="v",         # Orienta√ß√£o vertical (v) ou horizontal (h)
        yanchor="middle",        # √Çncora vertical (middle = centro)
        y=0.5,                   # Posi√ß√£o Y (0.5 = meio da p√°gina)
        xanchor="left",          # √Çncora horizontal (left = esquerda)
        x=1.05                   # Posi√ß√£o X (1.05 = um pouco √† direita do gr√°fico)
    )
)

# ============================================================================
# ADICIONAR ANOTA√á√ÉO NO CENTRO (DONUT)
# ============================================================================

# add_annotation() adiciona texto em qualquer posi√ß√£o do gr√°fico
# √ötil para mostrar total no centro do donut
fig.add_annotation(
    text=f'<b>{sum(quantidade)}</b><br>Labs<br>Total',  # Texto com HTML
                                                         # sum() calcula total
                                                         # <b> = negrito
                                                         # <br> = quebra de linha
    x=0.5,                                  # Posi√ß√£o X (0.5 = centro horizontal)
    y=0.5,                                  # Posi√ß√£o Y (0.5 = centro vertical)
    font=dict(
        size=20,                            # Tamanho da fonte
        color='#667eea'                     # Cor do texto (mesma do tema)
    ),
    showarrow=False                         # N√£o mostrar seta apontando
)

# ============================================================================
# EXPORTAR PARA HTML
# ============================================================================

# write_html() salva o gr√°fico como p√°gina web interativa
fig.write_html('../../docs/03_pie_chart.html')

# Mensagem de confirma√ß√£o no terminal
print("‚úÖ Gr√°fico salvo em: docs/03_pie_chart.html")

# Calcular e mostrar estat√≠sticas
total = sum(quantidade)
maior_categoria = categorias[quantidade.index(max(quantidade))]
print(f"üìä Total de labs: {total}")
print(f"üèÜ Maior categoria: {maior_categoria} ({max(quantidade)} labs)")

# ============================================================================
# COMO USAR ESTE SCRIPT
# ============================================================================
"""
1. Certifique-se de ter Plotly instalado:
   pip install plotly

2. Execute o script:
   python src/basico/03_pie_chart_commented.py

3. Abra o arquivo gerado:
   docs/03_pie_chart.html no navegador

4. Experimente modificar:
   - Mude 'hole' para 0 (pizza cheia) ou 0.7 (anel fino)
   - Troque 'textinfo' para 'label+value' (mostrar n√∫meros)
   - Remova 'showlegend=True' para esconder legenda
   - Mude posi√ß√£o da legenda (x=0.1, y=1.1 para topo)
   - Adicione 'pull=[0.1, 0, 0, 0, 0, 0]' no go.Pie() para destacar primeira fatia
   
5. Execute novamente para ver as mudan√ßas!
"""

# ============================================================================
# CONCEITOS APRENDIDOS
# ============================================================================
"""
‚úÖ Criar gr√°fico de pizza com go.Pie()
‚úÖ Transformar pizza em donut (hole parameter)
‚úÖ Plotly calcula percentuais automaticamente
‚úÖ Customizar texto exibido (textinfo)
‚úÖ Posicionar legenda de forma customizada
‚úÖ Adicionar anota√ß√µes em posi√ß√µes espec√≠ficas
‚úÖ Usar HTML em textos (negrito, quebras de linha)
‚úÖ Calcular estat√≠sticas dos dados (sum, max, index)

DIFEREN√áAS DOS GR√ÅFICOS ANTERIORES:
- Linha: go.Scatter() - mostra tend√™ncia temporal
- Barras: go.Bar() - compara valores absolutos
- Pizza: go.Pie() - mostra propor√ß√µes/percentuais

QUANDO USAR PIZZA:
‚úÖ Mostrar partes de um todo (100%)
‚úÖ Comparar propor√ß√µes (qual % cada categoria representa)
‚úÖ At√© 6-7 categorias (mais que isso fica confuso)

QUANDO N√ÉO USAR PIZZA:
‚ùå Comparar valores que n√£o somam 100%
‚ùå Muitas categorias (>8)
‚ùå Valores muito pr√≥ximos (dif√≠cil ver diferen√ßa)
‚ùå Mudan√ßas ao longo do tempo (use linha)
"""

# ============================================================================
# VARIA√á√ïES POSS√çVEIS
# ============================================================================
"""
PIZZA CHEIA (SEM BURACO):
fig.add_trace(go.Pie(
    labels=categorias,
    values=quantidade,
    hole=0  # Sem buraco = pizza completa
))

DESTACAR UMA FATIA (PULL):
fig.add_trace(go.Pie(
    labels=categorias,
    values=quantidade,
    pull=[0.1, 0, 0, 0, 0, 0]  # Primeira fatia puxada para fora
))

MOSTRAR APENAS PERCENTUAIS:
textinfo='percent'

MOSTRAR TUDO:
textinfo='label+percent+value'

LEGENDA NO TOPO:
legend=dict(orientation="h", x=0.5, y=1.1)

ROTACIONAR PIZZA:
rotation=90  # Rotaciona 90 graus
"""